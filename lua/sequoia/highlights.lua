local colors = require("sequoia.palette")

local M = {}

M.base = {
    Normal = { fg = colors.fg, bg = colors.bg },
    NormalFloat = { fg = colors.fg, bg = colors.dark_gray },
    NormalNC = { fg = colors.fg, bg = colors.bg },
    Comment = { fg = colors.light_gray, italic = true },
    Cursor = { fg = colors.bg, bg = colors.cursor },
    CursorLine = { bg = colors.dark_gray },
    CursorLineNr = { fg = colors.white },
    LineNr = { fg = colors.gray },
    CursorColumn = { bg = colors.dark_gray },
    ColorColumn = { bg = colors.dark_gray },
    SignColumn = { fg = colors.fg, bg = colors.bg },
    Folded = { fg = colors.light_gray, bg = colors.dark_gray },
    FoldColumn = { fg = colors.gray, bg = colors.bg },
    Pmenu = { fg = colors.fg, bg = colors.black },
    PmenuSel = { fg = colors.bg, bg = colors.gray },
    PmenuSbar = { bg = colors.dark_gray },
    PmenuThumb = { bg = colors.gray },
    StatusLine = { fg = colors.fg, bg = colors.black },
    StatusLineNC = { fg = colors.gray, bg = colors.black },
    TabLine = { fg = colors.gray, bg = colors.black },
    TabLineFill = { fg = colors.gray, bg = colors.black },
    TabLineSel = { fg = colors.fg, bg = colors.dark_gray },
    VertSplit = { fg = colors.dark_gray },
    WinSeparator = { fg = colors.dark_gray },
    WildMenu = { fg = colors.bg, bg = colors.gray },
    Visual = { bg = colors.dark_gray },
    VisualNOS = { bg = colors.dark_gray },
    Search = { fg = colors.bg, bg = colors.orange },
    IncSearch = { fg = colors.bg, bg = colors.orange },
    Substitute = { fg = colors.bg, bg = colors.orange },
    MatchParen = { fg = colors.orange, bold = true },
    NonText = { fg = colors.gray },
    Conceal = { fg = colors.gray },
    SpellBad = { undercurl = true, sp = colors.orange },
    SpellCap = { undercurl = true, sp = colors.string },
    SpellLocal = { undercurl = true, sp = colors.green },
    SpellRare = { undercurl = true, sp = colors.green },
    QuickFixLine = { bg = colors.dark_gray },
}

M.syntax = {
    Constant = { fg = colors.orange },
    String = { fg = colors.string },
    Character = { fg = colors.string },
    Number = { fg = colors.orange },
    Boolean = { fg = colors.orange },
    Float = { fg = colors.orange },
    Function = { fg = colors.light_gray },
    Identifier = { fg = colors.fg },
    Keyword = { fg = colors.green },
    Statement = { fg = colors.green },
    Conditional = { fg = colors.green },
    Repeat = { fg = colors.green },
    Label = { fg = colors.green },
    Operator = { fg = colors.white },
    Exception = { fg = colors.green },
    PreProc = { fg = colors.green },
    Include = { fg = colors.green },
    Define = { fg = colors.green },
    Macro = { fg = colors.green },
    PreCondit = { fg = colors.green },
    Type = { fg = colors.light_gray },
    StorageClass = { fg = colors.green },
    Structure = { fg = colors.green },
    Typedef = { fg = colors.green },
    Special = { fg = colors.orange },
    SpecialChar = { fg = colors.orange },
    Tag = { fg = colors.orange },
    Delimiter = { fg = colors.white },
    SpecialComment = { fg = colors.light_gray, italic = true },
    Debug = { fg = colors.orange },
    Underlined = { underline = true },
    Ignore = { fg = colors.gray },
    Error = { fg = colors.orange },
    Todo = { fg = colors.orange, bold = true },
}

M.diff = {
    DiffAdd = { fg = colors.green, bg = colors.dark_gray },
    DiffChange = { fg = colors.orange, bg = colors.dark_gray },
    DiffDelete = { fg = colors.orange, bg = colors.dark_gray },
    DiffText = { fg = colors.orange, bg = colors.dark_gray, bold = true },
}

M.git = {
    gitcommitOverflow = { fg = colors.orange },
    gitcommitSummary = { fg = colors.green },
    gitcommitComment = { fg = colors.light_gray },
    gitcommitUntracked = { fg = colors.light_gray },
    gitcommitDiscarded = { fg = colors.light_gray },
    gitcommitSelected = { fg = colors.light_gray },
    gitcommitHeader = { fg = colors.green },
    gitcommitSelectedType = { fg = colors.green },
    gitcommitUnmergedType = { fg = colors.green },
    gitcommitDiscardedType = { fg = colors.green },
    gitcommitBranch = { fg = colors.orange, bold = true },
    gitcommitUntrackedFile = { fg = colors.green },
    gitcommitUnmergedFile = { fg = colors.orange, bold = true },
    gitcommitDiscardedFile = { fg = colors.orange, bold = true },
    gitcommitSelectedFile = { fg = colors.green, bold = true },
}

M.lsp = {
    LspReferenceText = { bg = colors.dark_gray },
    LspReferenceRead = { bg = colors.dark_gray },
    LspReferenceWrite = { bg = colors.dark_gray },
    LspCodeLens = { fg = colors.light_gray },
    LspCodeLensSeparator = { fg = colors.light_gray },
    LspSignatureActiveParameter = { fg = colors.orange },
}

M.treesitter = {
    ["@annotation"] = { fg = colors.orange },
    ["@attribute"] = { fg = colors.green },
    ["@boolean"] = { fg = colors.orange },
    ["@character"] = { fg = colors.string },
    ["@comment"] = { fg = colors.light_gray, italic = true },
    ["@conditional"] = { fg = colors.green },
    ["@constant"] = { fg = colors.orange },
    ["@constant.builtin"] = { fg = colors.orange },
    ["@constant.macro"] = { fg = colors.orange },
    ["@constructor"] = { fg = colors.light_gray },
    ["@error"] = { fg = colors.orange },
    ["@exception"] = { fg = colors.green },
    ["@field"] = { fg = colors.fg },
    ["@float"] = { fg = colors.orange },
    ["@function"] = { fg = colors.light_gray },
    ["@function.builtin"] = { fg = colors.light_gray },
    ["@function.macro"] = { fg = colors.light_gray },
    ["@include"] = { fg = colors.green },
    ["@keyword"] = { fg = colors.green },
    ["@keyword.function"] = { fg = colors.green },
    ["@keyword.operator"] = { fg = colors.green },
    ["@label"] = { fg = colors.green },
    ["@method"] = { fg = colors.light_gray },
    ["@namespace"] = { fg = colors.green },
    ["@number"] = { fg = colors.orange },
    ["@operator"] = { fg = colors.white },
    ["@parameter"] = { fg = colors.fg },
    ["@parameter.reference"] = { fg = colors.fg },
    ["@property"] = { fg = colors.fg },
    ["@punctuation.bracket"] = { fg = colors.white },
    ["@punctuation.delimiter"] = { fg = colors.white },
    ["@punctuation.special"] = { fg = colors.white },
    ["@repeat"] = { fg = colors.green },
    ["@string"] = { fg = colors.string },
    ["@string.escape"] = { fg = colors.string },
    ["@string.regex"] = { fg = colors.string },
    ["@string.special"] = { fg = colors.string },
    ["@symbol"] = { fg = colors.orange },
    ["@tag"] = { fg = colors.orange },
    ["@tag.attribute"] = { fg = colors.green },
    ["@tag.delimiter"] = { fg = colors.white },
    ["@text"] = { fg = colors.fg },
    ["@text.emphasis"] = { italic = true },
    ["@text.strong"] = { bold = true },
    ["@text.underline"] = { underline = true },
    ["@text.strike"] = { strikethrough = true },
    ["@text.title"] = { fg = colors.green, bold = true },
    ["@text.literal"] = { fg = colors.string },
    ["@text.uri"] = { fg = colors.string, underline = true },
    ["@text.math"] = { fg = colors.orange },
    ["@text.environment"] = { fg = colors.green },
    ["@text.environment.name"] = { fg = colors.green },
    ["@text.reference"] = { fg = colors.orange },
    ["@text.todo"] = { fg = colors.orange, bold = true },
    ["@text.note"] = { fg = colors.green, bold = true },
    ["@text.warning"] = { fg = colors.string, bold = true },
    ["@text.danger"] = { fg = colors.orange, bold = true },
    ["@type"] = { fg = colors.light_gray },
    ["@type.builtin"] = { fg = colors.light_gray },
    ["@type.definition"] = { fg = colors.light_gray },
    ["@variable"] = { fg = colors.fg },
    ["@variable.builtin"] = { fg = colors.orange },
}

return M 